next rate date again

```{r}
library(fs)
```


```{r}
dir_ls("rds")
```


```{r}
rdsname <- "aze_premyer-liqasi_2024-2025.rds"
rdsname <- "esp_primera-division_2024-2025.rds"
```

```{r}
  last_fit_date <-file.mtime(str_c("fit/", rdsname))
  if (is.na(last_fit_date)) last_fit_date <- ymd_hms("1900-01-01 02:03:04") # fake date in past
  rds_filename <- str_c("rds/", rdsname)
  if (!file.exists(rds_filename)) return(c("after" = ymd_hms("2100-01-01 01:02:03"), "before" = NA)) # fake date way in the future
  games <- read_rds(rds_filename)
  games %>% arrange(ko) -> games
  games %>% filter(ko > last_fit_date - hours(2)) -> games  # these are the games that determine when the next rating is
  games %>% pivot_longer(starts_with("t"), names_to = "venue", values_to = "team") %>%
    arrange(ko) %>%
    group_by(team) %>%
    mutate(count = row_number())  -> games # from https://stackoverflow.com/questions/10029235/cumulative-count-of-each-value

    games %>% filter(count > 1) %>%
    pluck("ko", 1) -> late_date

  
    games %>%
    ungroup() %>%
    group_by(ko) %>%
    summarize(mc = max(count)) %>%
    mutate(gt1 = (mc > 1)) %>%
    mutate(lgt1 = lead(gt1)) %>%
    filter(lgt1) %>%
    slice(1) %>%
    mutate(mend = ko + hours(2)) %>%
    pull(mend) -> mxx
  c("after" = mxx, "before" = late_date)

```



the function

```{r}
  last_fit_date <-file.mtime(str_c("fit/", rdsname))
  if (is.na(last_fit_date)) last_fit_date <- ymd_hms("1900-01-01 02:03:04") # fake date in past
  rds_filename <- str_c("rds/", rdsname)
  if (!file.exists(rds_filename)) return(c("after" = ymd_hms("2100-01-01 01:02:03"), "before" = NA)) # fake date way in the future
  games <- read_rds(rds_filename)
  games %>% arrange(ko) -> games
  games %>% filter(ko > last_fit_date - hours(2)) -> games  # these are the games that determine when the next rating is
  games %>% pivot_longer(starts_with("t"), names_to = "venue", values_to = "team") %>%
    arrange(ko) %>%
    group_by(team) %>%
    mutate(count = row_number())  -> games # from https://stackoverflow.com/questions/10029235/cumulative-count-of-each-value
  # find the first row where count = 2
  games %>% filter(count > 1) %>%
    pluck("ko", 1) -> late_date
  # this is NULL if there are no games to rate, or if there are games to rate and this is the end of the season
  if (is.null(late_date)) {
    n <- nrow(games)
    if (n == 0) {
      return(c("after" = ymd_hms("2100-01-01 01:02:03"), "before" = NA)) # fake date way in the future
    } else {
      games %>%
        ungroup() %>%
        summarize(mx = max(ko) + hours(2)) %>% # after the last game in the fixture list remaining
        pull(mx) -> mxx
      return(c("after" = mxx, "before" = late_date))
    }
  }
  games %>%
    ungroup() %>%
    group_by(ko) %>%
    summarize(mc = max(count)) %>%
    mutate(gt1 = (mc > 1)) %>%
    mutate(lgt1 = lead(gt1)) %>%
    filter(lgt1) %>%
    slice(1) %>%
    mutate(mend = ko + hours(2)) %>%
    pull(mend) -> mxx
  c("after" = mxx, "before" = late_date)

  # I want the last ko before the first >1

  # games %>% filter(count == 1) %>% # grab the latest time from the previous games
  #   ungroup() %>%
  #   summarize(mxxx = max(ko) + hours(2)) %>%
  #   pull(mxxx)
}

```

